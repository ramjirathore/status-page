// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  orgs      OrganizationMember[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Organization {
  id        String   @id @default(cuid())
  name      String
  members   OrganizationMember[]
  services  Service[]
  incidents Incident[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model OrganizationMember {
  id             String        @id @default(cuid())
  userId         String
  organizationId String
  role           String        // "admin" | "member"
  user           User          @relation(fields: [userId], references: [id])
  organization   Organization  @relation(fields: [organizationId], references: [id])
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt

  @@unique([userId, organizationId])
}

model Service {
  id             String        @id @default(cuid())
  name           String
  status         ServiceStatus @default(OPERATIONAL)
  organizationId String
  organization   Organization  @relation(fields: [organizationId], references: [id])
  incidents      Incident[]
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
}

model Incident {
  id             String        @id @default(cuid())
  title          String
  description    String
  status         IncidentStatus @default(OPEN)
  serviceId      String
  organizationId String
  service        Service       @relation(fields: [serviceId], references: [id])
  organization   Organization  @relation(fields: [organizationId], references: [id])
  updates        IncidentUpdate[]
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
}

model IncidentUpdate {
  id         String   @id @default(cuid())
  incidentId String
  incident   Incident @relation(fields: [incidentId], references: [id], onDelete: Cascade)
  message    String
  status     IncidentStatus
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

enum ServiceStatus {
  OPERATIONAL
  DEGRADED
  PARTIAL_OUTAGE
  MAJOR_OUTAGE
}

enum IncidentStatus {
  OPEN
  RESOLVED
  MAINTENANCE
}
